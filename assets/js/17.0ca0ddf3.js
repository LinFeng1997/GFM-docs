(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{256:function(e,t,n){"use strict";n.r(t);var r=n(0),o=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v(e._s((e.$page.frontmatter.start=621,null)))]),e._v(" "),n("h3",{attrs:{id:"autolinks-extension"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#autolinks-extension","aria-hidden":"true"}},[e._v("#")]),e._v(" Autolinks (extension)")]),e._v(" "),n("p",[e._v("GFM enables the "),n("code",[e._v("autolink")]),e._v(" extension, where autolinks will be recognised in a greater number of conditions."),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#autolink",target:"_blank",rel:"noopener noreferrer"}},[e._v("Autolink"),n("OutboundLink")],1),e._v("s can also be constructed without requiring the use of "),n("code",[e._v("<")]),e._v(" and to "),n("code",[e._v(">")]),e._v(" to delimit them, although they will be recognized under a smaller set of circumstances. All such recognized autolinks can only come at the beginning of a line, after whitespace, or any of the delimiting characters "),n("code",[e._v("*")]),e._v(", "),n("code",[e._v("_")]),e._v(", "),n("code",[e._v("~")]),e._v(", and "),n("code",[e._v("(")]),e._v("."),n("br"),e._v("\nAn "),n("a",{attrs:{href:"https://github.github.com/gfm/#extended-www-autolink",target:"_blank",rel:"noopener noreferrer"}},[e._v("extended www autolink"),n("OutboundLink")],1),e._v(" will be recognized when the text "),n("code",[e._v("www.")]),e._v(" is found followed by a "),n("a",{attrs:{href:"https://github.github.com/gfm/#valid-domain",target:"_blank",rel:"noopener noreferrer"}},[e._v("valid domain"),n("OutboundLink")],1),e._v(". A "),n("a",{attrs:{href:"https://github.github.com/gfm/#valid-domain",target:"_blank",rel:"noopener noreferrer"}},[e._v("valid domain"),n("OutboundLink")],1),e._v(" consists of alphanumeric characters, underscores ("),n("code",[e._v("_")]),e._v("), hyphens ("),n("code",[e._v("-")]),e._v(") and periods ("),n("code",[e._v(".")]),e._v("). There must be at least one period, and no underscores may be present in the last two segments of the domain."),n("br"),e._v("\nThe scheme "),n("code",[e._v("http")]),e._v(" will be inserted automatically:"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[e._v("After a "),n("a",{attrs:{href:"https://github.github.com/gfm/#valid-domain",target:"_blank",rel:"noopener noreferrer"}},[e._v("valid domain"),n("OutboundLink")],1),e._v(", zero or more non-space non-"),n("code",[e._v("<")]),e._v(" characters may follow:"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[e._v("We then apply "),n("a",{attrs:{href:"https://github.github.com/gfm/#extended-autolink-path-validation",target:"_blank",rel:"noopener noreferrer"}},[e._v("extended autolink path validation"),n("OutboundLink")],1),e._v(" as follows:"),n("br"),e._v("\nTrailing punctuation (specifically, "),n("code",[e._v("?")]),e._v(", "),n("code",[e._v("!")]),e._v(", "),n("code",[e._v(".")]),e._v(", "),n("code",[e._v(",")]),e._v(", "),n("code",[e._v(":")]),e._v(", "),n("code",[e._v("*")]),e._v(", "),n("code",[e._v("_")]),e._v(", and "),n("code",[e._v("~")]),e._v(") will not be considered part of the autolink, though they may be included in the interior of the link:"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[e._v("When an autolink ends in "),n("code",[e._v(")")]),e._v(", we scan the entire autolink for the total number of parentheses. If there is a greater number of closing parentheses than opening ones, we don’t consider the last character part of the autolink, in order to facilitate including an autolink inside a parenthesis:"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[e._v("This check is only done when the link ends in a closing parentheses "),n("code",[e._v(")")]),e._v(", so if the only parentheses are in the interior of the autolink, no special rules are applied:"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[e._v("If an autolink ends in a semicolon ("),n("code",[e._v(";")]),e._v("), we check to see if it appears to resemble an "),n("a",{attrs:{href:"https://github.github.com/gfm/#entity-references",target:"_blank",rel:"noopener noreferrer"}},[e._v("entity reference"),n("OutboundLink")],1),e._v("; if the preceding text is "),n("code",[e._v("&")]),e._v(" followed by one or more alphanumeric characters. If so, it is excluded from the autolink:"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[n("code",[e._v("<")]),e._v(" immediately ends an autolink."),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[e._v("An "),n("a",{attrs:{href:"https://github.github.com/gfm/#extended-url-autolink",target:"_blank",rel:"noopener noreferrer"}},[e._v("extended url autolink"),n("OutboundLink")],1),e._v(" will be recognised when one of the schemes "),n("code",[e._v("http://")]),e._v(", "),n("code",[e._v("https://")]),e._v(", or "),n("code",[e._v("ftp://")]),e._v(", followed by a "),n("a",{attrs:{href:"https://github.github.com/gfm/#valid-domain",target:"_blank",rel:"noopener noreferrer"}},[e._v("valid domain"),n("OutboundLink")],1),e._v(", then zero or more non-space non-"),n("code",[e._v("<")]),e._v(" characters according to "),n("a",{attrs:{href:"https://github.github.com/gfm/#extended-autolink-path-validation",target:"_blank",rel:"noopener noreferrer"}},[e._v("extended autolink path validation"),n("OutboundLink")],1),e._v(":"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[e._v("An "),n("a",{attrs:{href:"https://github.github.com/gfm/#extended-email-autolink",target:"_blank",rel:"noopener noreferrer"}},[e._v("extended email autolink"),n("OutboundLink")],1),e._v(" will be recognised when an email address is recognised within any text node. Email addresses are recognised according to the following rules:")]),e._v(" "),n("ul",[n("li",[e._v("One ore more characters which are alphanumeric, or "),n("code",[e._v(".")]),e._v(", "),n("code",[e._v("-")]),e._v(", "),n("code",[e._v("_")]),e._v(", or "),n("code",[e._v("+")]),e._v(".")]),e._v(" "),n("li",[e._v("An "),n("code",[e._v("@")]),e._v(" symbol.")]),e._v(" "),n("li",[e._v("One or more characters which are alphanumeric, or "),n("code",[e._v(".")]),e._v(", "),n("code",[e._v("-")]),e._v(", or "),n("code",[e._v("_")]),e._v(". At least one of the characters here must be a period ("),n("code",[e._v(".")]),e._v("). The last character must not be one of "),n("code",[e._v("-")]),e._v(" or "),n("code",[e._v("_")]),e._v(". If the last character is a period ("),n("code",[e._v(".")]),e._v("), it will be excluded from the autolink.")])]),e._v(" "),n("p",[e._v("The scheme "),n("code",[e._v("mailto:")]),e._v(" will automatically be added to the generated link:"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[n("code",[e._v("+")]),e._v(" can occur before the "),n("code",[e._v("@")]),e._v(", but not after."),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1),e._v(" "),n("p",[n("code",[e._v(".")]),e._v(", "),n("code",[e._v("-")]),e._v(", and "),n("code",[e._v("_")]),e._v(" can occur on both sides of the "),n("code",[e._v("@")]),e._v(", but only "),n("code",[e._v(".")]),e._v(" may occur at the end of the email address, in which case it will not be considered part of the address:"),n("br"),e._v(" "),n("Example",{attrs:{index:e.$page.frontmatter.start++}})],1)])},[],!1,null,null,null);t.default=o.exports}}]);