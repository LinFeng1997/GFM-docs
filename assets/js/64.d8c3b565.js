(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{217:function(t,e,r){"use strict";r.r(e);var _=r(0),v=Object(_.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v(t._s((t.$page.frontmatter.start=118,null)))]),t._v(" "),r("h3",{attrs:{id:"html-块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html-块","aria-hidden":"true"}},[t._v("#")]),t._v(" HTML 块")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML 块"),r("OutboundLink")],1),t._v("是一组被视为原生 HTML 的行（并且不会在 HTML 输出中进行转义）。")]),t._v(" "),r("p",[t._v("有七种 "),r("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML 块"),r("OutboundLink")],1),t._v("，可以通过它们的起始和结束条件来定义。这种块以满足"),r("a",{attrs:{href:"https://github.github.com/gfm/#start-condition",target:"_blank",rel:"noopener noreferrer"}},[t._v("起始条件"),r("OutboundLink")],1),t._v("的行开始（在最多三个空格可选缩进之后）。如果没有遇到满足"),r("a",{attrs:{href:"https://github.github.com/gfm/#end-condition",target:"_blank",rel:"noopener noreferrer"}},[t._v("结束条件"),r("OutboundLink")],1),t._v("的行，它就以满足匹配结束条件的第一个后续行，或者文档的最后一行，或其他容器块结束。如果第一行同时满足开始条件和结束条件，则该块将仅包含该行。")]),t._v(" "),r("ol",[r("li",[r("p",[r("strong",[t._v("开始条件：")]),t._v(" 行以字符串 "),r("code",[t._v("<script")]),t._v("，"),r("code",[t._v("<pre")]),t._v(" 或 "),r("code",[t._v("<style")]),t._v("（不区分大小写）开头，后跟空格，字符串 "),r("code",[t._v(">")]),t._v(" 或行尾。"),r("br"),t._v(" "),r("strong",[t._v("结束条件：")]),t._v(" 行包含结束标签 "),r("code",[t._v("<\/script>")]),t._v("，"),r("code",[t._v("</pre>")]),t._v(" 或 "),r("code",[t._v("</style>")]),t._v("（不区分大小写;它不需要与起始标签匹配）。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("开始条件：")]),t._v(" 行以字符串 "),r("code",[t._v("\x3c!--")]),t._v(" 开头。"),r("br"),t._v(" "),r("strong",[t._v("结束条件：")]),t._v(" 行包含字符串 "),r("code",[t._v("--\x3e")]),t._v("。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("起始条件：")]),t._v(" 行以字符串 "),r("code",[t._v("<?")]),t._v(" 开头。"),r("br"),t._v(" "),r("strong",[t._v("结束条件：")]),t._v(" 行包含字符串 "),r("code",[t._v("?>")]),t._v("。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("起始条件：")]),t._v(" 行以字符串 "),r("code",[t._v("<!")]),t._v(" 开头，后跟一个大写的 ASCII 字母。"),r("br"),t._v(" "),r("strong",[t._v("结束条件：")]),t._v(" 行包含字符 "),r("code",[t._v(">")]),t._v("。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("起始条件：")]),t._v(" 行以字符串 "),r("code",[t._v("<![CDATA[")]),t._v(" 开头。"),r("br"),t._v(" "),r("strong",[t._v("结束条件：")]),t._v(" 行包含字符 "),r("code",[t._v("]]>")]),t._v("。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("起始条件：")]),t._v(" 行以字符串 "),r("code",[t._v("<")]),t._v(" 或 "),r("code",[t._v("</")]),t._v(" 开头，后跟其中一个字符串（不区分大小写）"),r("code",[t._v("address")]),t._v(", "),r("code",[t._v("article")]),t._v(", "),r("code",[t._v("aside")]),t._v(", "),r("code",[t._v("base")]),t._v(", "),r("code",[t._v("basefont")]),t._v(", "),r("code",[t._v("blockquote")]),t._v(", "),r("code",[t._v("body")]),t._v(", "),r("code",[t._v("caption")]),t._v(", "),r("code",[t._v("center")]),t._v(", "),r("code",[t._v("col")]),t._v(", "),r("code",[t._v("colgroup")]),t._v(", "),r("code",[t._v("dd")]),t._v(", "),r("code",[t._v("details")]),t._v(", "),r("code",[t._v("dialog")]),t._v(", "),r("code",[t._v("dir")]),t._v(", "),r("code",[t._v("div")]),t._v(", "),r("code",[t._v("dl")]),t._v(", "),r("code",[t._v("dt")]),t._v(", "),r("code",[t._v("fieldset")]),t._v(", "),r("code",[t._v("figcaption")]),t._v(", "),r("code",[t._v("figure")]),t._v(", "),r("code",[t._v("footer")]),t._v(", "),r("code",[t._v("form")]),t._v(", "),r("code",[t._v("frame")]),t._v(", "),r("code",[t._v("frameset")]),t._v(", "),r("code",[t._v("h1")]),t._v(", "),r("code",[t._v("h2")]),t._v(", "),r("code",[t._v("h3")]),t._v(", "),r("code",[t._v("h4")]),t._v(", "),r("code",[t._v("h5")]),t._v(", "),r("code",[t._v("h6")]),t._v(", "),r("code",[t._v("head")]),t._v(", "),r("code",[t._v("header")]),t._v(", "),r("code",[t._v("hr")]),t._v(", "),r("code",[t._v("html")]),t._v(", "),r("code",[t._v("iframe")]),t._v(", "),r("code",[t._v("legend")]),t._v(", "),r("code",[t._v("li")]),t._v(", "),r("code",[t._v("link")]),t._v(", "),r("code",[t._v("main")]),t._v(", "),r("code",[t._v("menu")]),t._v(", "),r("code",[t._v("menuitem")]),t._v(", "),r("code",[t._v("nav")]),t._v(", "),r("code",[t._v("noframes")]),t._v(", "),r("code",[t._v("ol")]),t._v(", "),r("code",[t._v("optgroup")]),t._v(", "),r("code",[t._v("option")]),t._v(", "),r("code",[t._v("p")]),t._v(", "),r("code",[t._v("param")]),t._v(", "),r("code",[t._v("section")]),t._v(", "),r("code",[t._v("source")]),t._v(", "),r("code",[t._v("summary")]),t._v(", "),r("code",[t._v("table")]),t._v(", "),r("code",[t._v("tbody")]),t._v(", "),r("code",[t._v("td")]),t._v(", "),r("code",[t._v("tfoot")]),t._v(", "),r("code",[t._v("th")]),t._v(", "),r("code",[t._v("thead")]),t._v(", "),r("code",[t._v("title")]),t._v(", "),r("code",[t._v("tr")]),t._v(", "),r("code",[t._v("track")]),t._v(", "),r("code",[t._v("ul")]),t._v(", 后跟"),r("a",{attrs:{href:"https://github.github.com/gfm/#whitespace",target:"_blank",rel:"noopener noreferrer"}},[t._v("空格"),r("OutboundLink")],1),t._v(", 在行尾是字符 "),r("code",[t._v(">")]),t._v(" 或者 "),r("code",[t._v("/>")]),t._v("。"),r("br"),t._v(" "),r("strong",[t._v("结束条件：")]),t._v(" 行后跟一个"),r("a",{attrs:{href:"https://github.github.com/gfm/#blank-line",target:"_blank",rel:"noopener noreferrer"}},[t._v("空行"),r("OutboundLink")],1),t._v("。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("起始条件：")]),t._v(" 行以完整的"),r("a",{attrs:{href:"https://github.github.com/gfm/#open-tag",target:"_blank",rel:"noopener noreferrer"}},[t._v("打开标签"),r("OutboundLink")],1),t._v("或"),r("a",{attrs:{href:"https://github.github.com/gfm/#closing-tag",target:"_blank",rel:"noopener noreferrer"}},[t._v("闭合标签"),r("OutboundLink")],1),t._v("（除了 "),r("code",[t._v("script")]),t._v("，"),r("code",[t._v("style")]),t._v(" 或 "),r("code",[t._v("pre")]),t._v(" 之外的任何标签名称）开始，后面只有"),r("a",{attrs:{href:"https://github.github.com/gfm/#whitespace",target:"_blank",rel:"noopener noreferrer"}},[t._v("空格"),r("OutboundLink")],1),t._v("或行尾。"),r("br"),t._v(" "),r("strong",[t._v("结束条件：")]),t._v(" 行后紧跟"),r("a",{attrs:{href:"https://github.github.com/gfm/#blank-line",target:"_blank",rel:"noopener noreferrer"}},[t._v("空行"),r("OutboundLink")],1),t._v("。")])])]),t._v(" "),r("p",[t._v("HTML 块会一直连续，直到它们被适当的"),r("a",{attrs:{href:"https://github.github.com/gfm/#end-condition",target:"_blank",rel:"noopener noreferrer"}},[t._v("结束条件"),r("OutboundLink")],1),t._v("，或文档的最后一行，或其他"),r("a",{attrs:{href:"https://github.github.com/gfm/#container-block",target:"_blank",rel:"noopener noreferrer"}},[t._v("容器块"),r("OutboundLink")],1),t._v("关闭。这意味着 HTML 块中可能被识别为起始条件的任何 HTML 都将被解析器忽略并按原样传递，而不会更改解析器的状态。"),r("br"),t._v("\n例如，"),r("code",[t._v("<table>")]),t._v(" 起始的 HTML 块中的 "),r("code",[t._v("<pre>")]),t._v(" 不会影响解析器状态; 当 HTML 块由启动条件 6 启动时，它将在任意空白行结束。这可能是令人惊讶的："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("在这种情况下，HTML 块由换行符终止，"),r("code",[t._v("**Hello**")]),t._v(" 文本保持逐字逐句且正常的解析，如此周而复始，并有段落，强调的 "),r("code",[t._v("world")]),t._v("，内联和块类型的 HTML 伴随。"),r("br"),t._v("\n除类型 7 之外的所有类型的 "),r("a",{attrs:{href:"https://github.github.com/gfm/#html-blocks",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML 块"),r("OutboundLink")],1),t._v("都可能会中断段落。类型 7 的块可能不会中断段落。 （此限制旨在防止对包裹段落中的长标签进行不必要的解释，比如起始的 HTML 块。）"),r("br"),t._v("\n一些简单的例子如下。以下是类型 6 的一些基本的 HTML 块："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("块也可以以闭合标签开头："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("这里我们有两个 HTML 块，它们之间有 Markdown 段落："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("第一行上的标签可以是局部的，只要它被分割成有空格的结果："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("无需关闭打开的标签："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("部分标签甚至不需要完成（垃圾进，垃圾出）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("初始标签甚至不需要是有效标签，只要它像一个标签一样："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("在类型 6 的块中，初始标签本身不需要在一行上："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("直到下一个空行或文档结尾的所有内容都包含在 HTML 块中。因此，在下面的示例中，看起来像 Markdown 代码块的实际上是 HTML 块的一部分，它一直持续到空白行或文档的末尾："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("要创造标签带有 "),r("em",[t._v("不在")]),t._v("（6）中的块级标签列表中的 "),r("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML 块"),r("OutboundLink")],1),t._v("，必须将标签单独放在第一行（并且必须完成）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("在类型 7 的块中，"),r("a",{attrs:{href:"https://github.github.com/gfm/#tag-name",target:"_blank",rel:"noopener noreferrer"}},[t._v("标签名称"),r("OutboundLink")],1),t._v("可以是任意内容："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("这些规则旨在允许我们使用可用作块级或内联级标签的标签。"),r("code",[t._v("<del>")]),t._v(" 标签是一个很好的示例。我们可以用三种不同的方式用 "),r("code",[t._v("<del>")]),t._v(" 标签包围内容。在这种情况下，我们会得到一个原生的 HTML 块，因为 "),r("code",[t._v("<del>")]),t._v(" 标签本身就是一行："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("在这种情况下，我们会得到一个原生的 HTML 块，它只包含 "),r("code",[t._v("<del>")]),t._v(" 标签（因为它以下面的空行结束）。所以内容被 CommonMark 规范解释："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("最后，在这种情况下，"),r("code",[t._v("<del>")]),t._v(" 标签在 CommonMark 段落中被解释为原生 HTML。（因为标签本身不在一行，我们得到内联 HTML 而不是 HTML 块。）"),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("旨在包含字面量内容（"),r("code",[t._v("script")]),t._v(", "),r("code",[t._v("style")]),t._v(", "),r("code",[t._v("pre")]),t._v("），注释，处理指令和声明的 HTML 标签，它们的处理方式有所不同。这些块不是以第一个空行结束，而是在包含相应结束标签的第一行结束。因此，这些块可以包含空行：\n一个 pre 标签（类型 1）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("一个 script 标签（类型 1）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("一个 style 标签（类型 1）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("如果没有匹配的结束标签，则该块将在文档的末尾（或闭合的"),r("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[t._v("块引号"),r("OutboundLink")],1),r("a",{attrs:{href:"https://github.github.com/gfm/#list-items",target:"_blank",rel:"noopener noreferrer"}},[t._v("列表项"),r("OutboundLink")],1),t._v("）结束："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("结束标签可以与开始标签位于同一行："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("注意，结束标签之后的最后一行上的任何内容都将包含在 "),r("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML 块"),r("OutboundLink")],1),t._v("中："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("一个注释（类型 2）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("一个处理指令（类型 3）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("一个声明（类型 4）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("CDATA （类型 5）："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("开始标签可以缩进 1-3 个空格，但不能缩进 4 个空格："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("1-6 类型的 HTML 块可以中断段落，并且不需要以空行开头。"),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("然而，除文档末尾外，还需要以下空白行，"),r("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[t._v("除"),r("OutboundLink")],1),t._v("以上类型 1-5 的块外："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("类型 7 的 HTML 块不能中断段落："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("此规则不同于 John Gruber 的原始 Markdown 语法规范，该规范说：")]),t._v(" "),r("blockquote",[r("p",[t._v("唯一的限制是块级 HTML 元素 - 例如 "),r("code",[t._v("<div>")]),t._v(", "),r("code",[t._v("<table>")]),t._v(", "),r("code",[t._v("<pre>")]),t._v(", "),r("code",[t._v("<p>")]),t._v(" 等 - 必须用空行与周围内容分开，并且不应使用 tab 或空格缩进块的开始和结束标签。")])]),t._v(" "),r("p",[t._v("在某种程度上，Gruber 的规则比这里给出的规则更具限制性：")]),t._v(" "),r("ul",[r("li",[t._v("它要求 HTML 块前面有一个空行。")]),t._v(" "),r("li",[t._v("它不允许开始标签缩进。")]),t._v(" "),r("li",[t._v("它需要一个匹配的结束标签，它也不允许缩进。")])]),t._v(" "),r("p",[t._v("大多数 Markdown 实现（包括 Gruber 自己的一些实现）并不尊重这些限制的全部。"),r("br"),t._v("\n但是，有一个方面，Gruber 的规则比这里给出的规则更自由，因为它允许在 HTML 块中出现空行。在这里禁止它们有两个原因。首先，它消除了解析平衡标签的需要，这是昂贵的，并且如果没有找到匹配的结束标签，则可能需要从文档的末尾回溯。其次，它提供了一种非常简单灵活的方法，可以在 HTML 标签中包含 Markdown 内容：只需使用空行将 Markdown 与 HTML 分开："),r("br"),t._v("\n对比："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}}),t._v(" "),r("p",[t._v("如果打开的标签具有属性 "),r("code",[t._v("markdown=1")]),t._v("，则某些 Markdown 实现采用了将标签内的内容解释为文本的约定。上面给出的规则似乎是一种更简单，更优雅的方式来实现相同的表达能力，这也很容易解析。\n主要的潜在缺点是，人们无法再将 HTML 块粘贴到 Markdown 文档中，并具有 100％ 的可靠性。但是，在大多数情况下，这样可以正常工作，因为 HTML 中的空行通常后跟 HTML 块标签。对于示例："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("但是，如果内部标签缩进，并用空格分隔，则会出现问题，因为它们将被解释为缩进的代码块："),r("br"),t._v(" "),r("Example",{attrs:{index:t.$page.frontmatter.start++}})],1),t._v(" "),r("p",[t._v("幸运的是，通常不需要空行，它是可以没有的。例外是在 "),r("code",[t._v("<pre>")]),t._v(" 标签内，但"),r("a",{attrs:{href:"https://github.github.com/gfm/#html-blocks",target:"_blank",rel:"noopener noreferrer"}},[t._v("如上所述"),r("OutboundLink")],1),t._v("，以"),r("code",[t._v("<pre>")]),t._v(" 开头的原生 HTML 块可以包含空行。")])],1)},[],!1,null,null,null);e.default=v.exports}}]);